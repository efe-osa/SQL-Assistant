version: '3.8'

networks:
  sql-assistant-network:
    driver: bridge

volumes:
  sqlite_data:

services:
  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "3001:3001"
    environment:
      - TOGETHER_API_KEY=${TOGETHER_API_KEY}
      - TOGETHER_MODEL=${TOGETHER_MODEL}
      - TOGETHERAI_API_KEY=${TOGETHERAI_API_KEY}
      - TOGETHERAI_MODEL_NAME=${TOGETHERAI_MODEL_NAME}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2}
      - LANGCHAIN_CALLBACKS_BACKGROUND=${LANGCHAIN_CALLBACKS_BACKGROUND}
      - LANGSMITH_ENDPOINT=${LANGSMITH_ENDPOINT}
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
      - LANGSMITH_PROJECT=${LANGSMITH_PROJECT}
      - SQLITE_DB_PATH=${SQLITE_DB_PATH}
      - DB_DIR=${DB_DIR}

    depends_on:
      sqlite:
        condition: service_healthy
    networks:
      - sql-assistant-network

  sqlite:
    image: keinos/sqlite3:latest
    container_name: sqlite-db
    ports:
      - "5432:5432"
    volumes:
      - ./sqlite_data/car_db.sql:/db/car_db.sql
      - ./sqlite_data:/db
    entrypoint: >
      sh -c "sqlite3 /db/cars.db << /db/car_db.sql && tail -f /dev/null"
    healthcheck:
      test: ["CMD", "sqlite3", "/db/cars.db", ".tables"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - sql-assistant-network
